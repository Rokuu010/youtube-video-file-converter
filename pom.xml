<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    // I'm inheriting from the Spring Boot parent POM to get all the default configurations.
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath/> </parent>

    // This is the unique identifier for my project.
    <groupId>com.example</groupId>
    <artifactId>video-converter</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>video-converter</name>
    <description>A simple video converter web service using Spring Boot, Thymeleaf, and JavaCV.</description>

    // I'm setting the Java version for my project to 23.
    <properties>
        <java.version>23</java.version>
    </properties>

    // Here's where I declare all the libraries my project needs.
    <dependencies>
        // This is for building the web application part.
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        // This is for the frontend, so I can create dynamic HTML pages.
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        // This is the core library I'm using to handle the video conversion. It's a wrapper for FFmpeg.
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>javacv-platform</artifactId>
            <version>1.5.10</version>
        </dependency>
    </dependencies>

    // This section is for managing dependency versions.
    <dependencyManagement>
        <dependencies>
            // I'm explicitly setting the version for this library to override a potential security vulnerability.
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.5.7</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    // This is for configuring how my project gets built and packaged.
    <build>
        <plugins>
            // This plugin is what turns my project into a runnable JAR file.
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
